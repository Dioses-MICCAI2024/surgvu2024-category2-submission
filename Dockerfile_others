# Use NVIDIA's PyTorch base image with CUDA support
FROM pytorch/pytorch:1.9.1-cuda11.1-cudnn8-devel
#FROM nvidia/cuda:11.4.3-cudnn8-devel-ubuntu20.04
#FROM nvcr.io/nvidia/pytorch:22.07-py3

ENV DEBIAN_FRONTEND=noninteractive 

RUN groupadd -r algorithm && useradd -m --no-log-init -r -g algorithm algorithm

# # Install python3 3.10 and pip
# RUN apt-get update && apt-get install -y \
#     software-properties-common \
#     && add-apt-repository ppa:deadsnakes/ppa \
#     && apt-get update && apt-get install -y \
#     python3.10 \
#     python3.10-distutils \
#     python3.10-dev \
#     curl \
#     && rm -rf /var/lib/apt/lists/*

# # Install dependencies
# RUN apt-get update && apt-get install -y \
#     python3-pip

#RUN apt-get install -y git

# Install dependencies excluding git-based packages
RUN python3 -m pip install --user numpy

# Install PyTorch 1.9.0 and torchvision 0.10.0 with CUDA 11.1 support
#RUN python3 -m pip install torch==1.9.0+cu111 torchvision==0.10.0+cu111 torchaudio==0.9.0 --extra-index-url https://download.pytorch.org/whl/cu111

# Install GitHub-based packages in a single command
RUN python3 -m pip install --user \
    "cityscapesScripts @ git+https://github.com/mcordts/cityscapesScripts.git@aeb7b82531f86185ce287705be28f452ba3ddbb8" \
    "detectron2 @ git+https://github.com/facebookresearch/detectron2.git@bb96d0b01d0605761ca182d0e3fac6ead8d8df6e" \
    "fairscale @ git+https://github.com/facebookresearch/fairscale@a342f349598b7449e477cfedaf8fc6bc3b068227"

RUN pip --no-cache-dir install 'git+https://github.com/facebookresearch/fvcore'

RUN mkdir -p /opt/algorithm /input /output \
    && chown algorithm:algorithm /opt/algorithm /input /output

RUN rm -rf /var/lib/apt/lists/*
RUN apt-get clean -y

RUN apt-get update -y
RUN apt-get install ffmpeg libsm6 libxext6  -y

USER algorithm

WORKDIR /opt/algorithm

ENV PATH="/home/algorithm/.local/bin:${PATH}"

RUN python3 -m pip install --user -U pip

COPY --chown=algorithm:algorithm requirements.txt /opt/algorithm/
RUN python3 -m pip install --user -r requirements.txt

COPY --chown=algorithm:algorithm process.py /opt/algorithm/

COPY . .

ENTRYPOINT python3 -m process $0 $@